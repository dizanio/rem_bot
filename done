# импортируем библиотеку для работы с телеграм-ботом
import telebot

# счётчик, который определяет количество заданных вопросов:
count = 0
# счётчики для разных вариантов окончания теста:
hum = 0
tech = 0
nat = 0
symb = 0
art = 0
# показывает, что тест еще не начат
f = False
# API бот
bot = telebot.TeleBot('5173281415:AAHEBym6e3_wBo1yR91-zsxtWlv-5W9T2VU')


# здесь указаны команды, которые будут обрабатываться функцией get_commands
@bot.message_handler(commands=['start', 'help', 'test', 'hum', 'tech', 'nat',
                               'symb', 'art', 'info'])
def get_commands(message):
    # глобализируем переменную f, чтобы проверить, был ли начат ли тест
    global f
    # далее происходит обработка комманд
    if message.text.lower() == "/start":
        # здороваемся и предлагаем два вида деятельности
        bot.send_message(message.from_user.id,
                         f"Привет, {message.from_user.first_name}! Я - бот, "
                         f"который поможет тебе определиться с "
                         f"профессией. Для этого ты можешь пройти "
                         f"профориентационный тест Климова или изучить "
                         f"возможные результаты.Чем ты хочешь заняться?"
                         f"\n/test - Пройти тест.\n/info - Узнать про типы "
                         f"людей.")
    elif message.text == '/help':
        # говорим, какие существуют команды
        bot.send_message(message.from_user.id, "Чтобы пройти тест на "
                                               "профориентацию, нажми /test. "
                                               "Чтобы узнать информацию о "
                                               "типах людей, нажми /info")
    elif message.text == '/test':
        # проверяем, начинал ли пользователь тест
        if not f:
            # меняем переменную f на True, потому что пользователь начал тест
            f = True
            # объясняем принцип работы
            bot.send_message(message.from_user.id,
                             "Тебе будут предложены два варианта деятельности."
                             " Выбери то, что нравится больше. \nГотов?")
            bot.register_next_step_handler(message, klimov)
        else:
            # если мы попали сюда, значит пользователь уже начал тест и
            # мы предлагаем его продолжить
            bot.send_message(message.from_user.id, 'Ты уже начал тест. Вот '
                                                   'твой вопрос:')
            klimov(message)
    # далее идёт обработка комманд, которые рассказывают про разные типы
    # людей по категоризации Климова
    elif message.text == '/hum':
        bot.send_message(message.from_user.id,
                         "(Человек-человек). Вы легко социализируетесь, "
                         "находите общий язык с людьми и не можете долго "
                         "находиться в одиночестве. Соответственно им нужно "
                         "выбирать профессию, направленную на работу "
                         "с людьми: сфера обслуживания, педагогика, медицина,"
                         " журналистика, маркетинг и т.п.")
    elif message.text == '/tech':
        bot.send_message(message.from_user.id,
                         "(Человек-техника). Наверняка вы с детства любили "
                         "копаться в технике, что-то чинить или мастерить. "
                         "Грех закапывать такие способности в землю. Вы"
                         " можете многого добиться, если выберите профессию "
                         "автомеханика, авиаконструктора, инженера,"
                         " изобретателя, ремонтника, электрика и т.п.")
    elif message.text == '/nat':
        bot.send_message(message.from_user.id,
                         "(Человек-природа). Вы любите растения, быстро "
                         "находите контакт с братьями нашими меньшими, "
                         "заботитесь об окружающей среде. Вам следует выбрать"
                         " профессию эколога, ветеринара, работника сельского"
                         " хозяйства, агронома, ландшафтного дизайнера, "
                         "флориста"
                         " и т.п.")
    elif message.text == '/symb':
        bot.send_message(message.from_user.id,
                         "(Человек-знаковая система). Ваши сильные стороны"
                         " – логическое мышление, рациональность, "
                         "математический склад ума. Вы легко разбираетесь"
                         " в цифрах и решаете даже сложные задачки. Вам "
                         "подойдет работа финансиста, экономиста, бухгалтера, "
                         "программиста, юриста и т.п.")
    elif message.text == '/art':
        bot.send_message(message.from_user.id,
                         "(Человек-художественный образ). Тонкая душевная "
                         "организация, тяга к искусству и наличие ярко"
                         " выраженного таланта всегда выделяли вас среди "
                         "других. Вы с малолетства участвовали в "
                         "художественной самодеятельности, конкурсах талантов"
                         " и т.п. Настало время сделать свое увлечение "
                         "основной профессией и стать писателем, актером, "
                         "музыкантом, художником, режиссером,"
                         " ювелиром, дизайнером и т.п.")
    # команда, которая предлагает изучить информацию о типах людей
    elif message.text == '/info':
        bot.send_message(message.from_user.id, 'Про кого ты хочешь узнать? '
                                               '\n/hum - Человек-человек'
                                               '\n/tech - Человек-техника'
                                               '\n/nat - Человек-природа'
                                               '\n/symb - Человек-знаковая '
                                               'система'
                                               '\n/art - Человек-'
                                               'художественный образ\n')


# здесь обрабатываются все остальные сообщения от пользователя
@bot.message_handler()
def get_messages(message):
    # когда мы что-то спрашиваем у пользователя, хочет ли он пройти тест,
    # он может ответить "нет". в этом случае мы предлагаем ему узнать про
    # типы людей
    if message.text.lower() == 'нет':
        bot.send_message(message.from_user.id,
                         "Тогда могу рассказать тебе про разные типы людей,"
                         " для этого нажми /info.")
    # если пользователь ввёл а или б, при этом переменная f указывает на то,
    # что мы начали тест, пользователю предлагается вопрос

    elif (message.text == 'а' or message.text == 'б') and f:
        global count, hum, tech, nat, symb, art
        count += 1
        # для удобства храним текст сообщения в value
        value = message.text
        # далее идёт распределение ответов
        if value == "а":
            if count in [2, 8, 12, 18]:
                hum += 1
            elif count in [4, 9, 14, 19]:
                tech += 1
            elif count in [1, 6, 10, 11, 16, 20]:
                nat += 1
            elif count in [5, 15]:
                symb += 1
            elif count in [3, 7, 13, 17]:
                art += 1
        elif value == "б":
            if count in [4, 6, 14, 16]:
                hum += 1
            elif count in [1, 7, 11, 17]:
                tech += 1
            elif count in [3, 13]:
                nat += 1
            elif count in [2, 9, 10, 12, 19, 20]:
                symb += 1
            elif count in [5, 8, 15, 18]:
                art += 1
        # снова возвращаемся к тесту
        klimov(message)
    # на случай, если пользователь ввёл что-то непредусмотренное, но начинал
    # проходить тест, мы предлагаем к нему вернуться
    elif f:
        bot.send_message(message.from_user.id, "Чтобы продолжить тест, "
                                               "нажми /test")
    # если бот не понял, чего хочет пользователь, мы напоминаем ему о
    # возможных командах
    else:
        bot.send_message(message.from_user.id, "Я тебя не понимаю. "
                                               "Напиши /start или /help.")


# сам тест
def klimov(message):
    global count, hum, tech, nat, symb, art, f
    # когда мы что-то спрашиваем у пользователя, хочет ли он пройти тест,
    # он может ответить "нет". в этом случае мы предлагаем ему узнать про
    # типы людей
    if message.text.lower() == 'нет':
        bot.send_message(message.from_user.id,
                         "Тогда могу рассказать тебе про разные типы людей, "
                         "для этого нажми /info.")
    else:
        global count
        # список, содержащий в себе вопросы
        base = ['а)Ухаживать за братьями нашими меньшими\nб)Работать с '
                'автомобилями',
                'а)Лечить различные заболевания\nб)Писать компьютерные '
                'программы',
                'а)Иллюстрировать печатную продукцию\nб)Ухаживать за '
                'растениями',
                'а)Изготавливать из материалов (дерева, ткани, '
                'пластика и т.п.) продукцию\n'
                'б)Работать в сфере маркетинга и продвижения товаров',
                'а)Читать и обсуждать научные труды\nб)Наслаждаться '
                'искусством и художественной литературой, '
                'обсуждать свои впечатления от того или иного произведения',
                'а)Работать с животными\nб)Работать с детьми',
                'а)Рисовать или играть на музыкальном инструменте\nб)Водить'
                ' автомобиль или другую технику',
                'а)Проводить экскурсии\nб)Организовывать увеселительные и '
                'культурные мероприятия',
                'а)Заниматься ремонтными работами\nб)Работать с текстами',
                'а)Лечить болезни у животных\nб)Работать с цифрами',
                'а)Заниматься селекцией растений\nб)Придумывать новые модели'
                ' одежды или чего-то другого',
                'а)Улаживать конфликты\nб)Работать с документацией',
                'а)Проводить кружки самодеятельности\nб)Изучать мир микробов',
                'а)Работать с медицинскими приборами\nб)Оказывать первую '
                'помощь пострадавшим',
                'а)Составлять детальные отчеты\nб)Описывать красочно и '
                'интересно события',
                'а)Работать в лаборатории\nб)Работать непосредственно с '
                'больными',
                'а)Красить стены и другие поверхности\nб)Заниматься разборкой'
                ' или монтажом',
                'а)Организовывать культпоходы\nб)Выступать на сцене',
                'а)Строить здания, заниматься сборкой техники\nб)Строить '
                'здания, заниматься сборкой техники',
                'а)Спасать растения от болезней\nб)Работать на компьютере']
        # если еще не все вопросы заданы, задаём следующий вопрос, обращаясь
        # к списку base по индексу count
        if count < 20:
            bot.send_message(message.from_user.id, base[count])
        # если все вопросы заданы, говорим про результаты теста
        else:
            bot.send_message(message.from_user.id, 'Поздравляю! Ты завершил'
                                                   ' тест. Вот твои '
                                                   'результаты:')
            res = {'Человек-человек': hum, 'Человек-техник': tech,
                   'Человек-природа': nat,
                   'Человек-знаковая система': symb,
                   'Человек-художественный образ': art}
            for key in res:
                bot.send_message(message.from_user.id, key + ': ' +
                                 str(res[key]))
            # предлагаем узнать подробную информацию
            bot.send_message(message.from_user.id,
                             'Тот тип, который набрал больше всего баллов,'
                             ' описывает тебя.'
                             'Хочешь узнать подробную характеристику? Нажми'
                             ' /info!')
            # обнуляем счётчики, чтобы тест можно было пройти повторно
            count = 0
            hum = 0
            tech = 0
            nat = 0
            symb = 0
            art = 0
            f = False


# здесь мы бесконечно обращаемся к телеграмм, чтобы сразу среагировать
# на сообщение пользователя
bot.polling(none_stop=True, interval=0)
